# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Deploy-main

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions: write-all

jobs:
  main-merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd /home/ubuntu
            sudo ./deployauto.sh

#      - name: Set appspec.yml
#        run: sudo cp main-appspec.yml appspec.yml
#
#      - name: Make appspec.yml executable
#        run: sudo chmod +x appspec.yml
#
#      - name: Make Dockerfile
#        run: sudo cp DockerFile-prod Dockerfile
#
#      - name: Make Dockerfile executable
#        run: sudo chmod +x Dockerfile

#      - name: Copy docker health checker
#        run: sudo cp docker-health-checker-prod.sh docker-health-checker.sh
#
#      - name: Make docker health checker runnable
#        run: sudo chmod 777 docker-health-checker.sh

#      - name: Copy docker container logs init script
#        run: sudo cp docker-log-init-prod.sh docker-log-init.sh
#
#      - name: Make logs init script runnable
#        run: sudo chmod 777 docker-log-init.sh